#include<iostream>
#include<stdlib.h>
using namespace std;
int binarySearch(int a[],int l,int r,int k);
int expoSearch(int a[],int n,int k);
int r=0;
int main()
{
    int t,n,*a=NULL,k,index;
    cin>>t;
    while(t--)
    {
        cin>>n;
        a=(int*)malloc(sizeof(int)*n);
        for(int i=0;i<n;i++) cin>>a[i];
        cin>>k;
        index=expoSearch(a,n,k);
        if(index==-1) cout<<"Not Present "<<r;
        else cout<<"Present "<<r+1;
    }
    return 0;
}
int expoSearch(int a[],int n,int k)
{
    if(a[0]==k){r++; return 0;}
    int i=1;
    while(i<n&&a[i]<=k){ i*=2;r++;}
    if(a[i]==k){r++; return i;}
    return binarySearch(a,i/2,min(i,n-1),k);
}
int binarySearch(int a[],int l,int h,int k)
{
    if(l>h){r++; return -1;}
    else{
        int m=l+(h-l)/2;
        if(a[m]<k){r++; return binarySearch(a,m+1,h,k);}
        else if(a[m]>k){r++; return binarySearch(a,l,m-1,k);}
        else{r++; return m;}
    }
}
