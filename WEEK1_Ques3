#include<iostream>
#include<math.h>
#include<stdlib.h>
using namespace std;
int c=0;
int jumpSearch(int a[],int n,int k);
int main()
{
    int t,n,*a=NULL,k,r;
    cin>>t;
    while(t--)
    {
        cin>>n;
        a=(int*)malloc(sizeof(int)*n);
        for(int i=0;i<n;i++) cin>>a[i];
        cin>>k;
        r=jumpSearch(a,n,k);
        if(r==-1) cout<<"Not Present "<<c;
        else cout<<"Present "<<c;
    }
    return 0;
}
int jumpSearch(int a[],int n,int k)
{
    int prev,step=sqrt(n);
    while(a[min(step,n)]<k)
    {
    	c++;
        prev=step;
        step+=sqrt(n);
        if(prev>=n) return -1;
    }
    while(a[prev]<k)
    {
    	c++;
        prev++;
        if(prev==min(step,n)) break;
    }
    if(a[prev]==k) return prev;
    return -1;
}
