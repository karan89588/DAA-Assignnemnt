#include<iostream>
#include<vector>
#include<queue>
using namespace std;
bool bfs(int s,vector<bool> vis,vector<vector<int> > g);
int main(){
    int t,s;
    cin>>t;
    vector<vector<int> > g(t,vector<int>(t,0));
    for(int i=0;i<t;i++){
        for(int j=0;j<t;j++){
            cin>>s;
            g[i][j]=s;
        }
    }
    vector<bool> vis(t,false);
    if(bfs(0,vis,g)) cout<<"Bipartile graph.\n";
    else cout<<"Not a Bipartile graph.\n";
    return 0;
}
bool bfs(int s,vector<bool> vis,vector<vector<int> > g){
    vector<int> color(vis.size(),-1);
    queue<int> q;
    q.push(s);
    vis[s]=true;
    color[s]=0;
    while(!q.empty()){
        int c=q.front();
        q.pop();
        for(int i=0;i<g[c].size();i++){
            if(g[c][i]!=0&&color[i]==color[c])
                return false;
            if(!vis[i]&&g[c][i]!=0){
                q.push(i);
                vis[i]=true;
                color[i]=color[c]==0?1:0;
            }
        }
    }
    return true;
}
