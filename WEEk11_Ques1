#include<iostream>
#include<vector>
using namespace std;
int mcmdp(vector<int> v,int t);
int main(){
    int t,s;
    cin>>t;
    vector<vector<int>> m(t,vector<int>(2,0));
    vector<int> v;
    for(int i=0;i<t;i++)
    {
        cin>>m[i][0]>>m[i][1];
    }
    for(int i=0;i<t;i++)
    {
        if(i==t-1)
        {
            v.push_back(m[i][0]);
            v.push_back(m[i][1]);
        }
        else
            v.push_back(m[i][0]);
    }
    cout<<mcmdp(v,v.size());
    return 0;
}
int mcmdp(vector<int> v,int t){
    vector<vector<int> > dp(t,vector<int>(t,0));
    int i,j,l,k,q;
    for(int l=2;l<t;l++){
        for(int i=1;i<t-l+1;i++){
            j=i+l-1;
            dp[i][j]=INT_MAX;
            for(int k=i;k<j;k++){
                q=dp[i][k]+dp[k+1][j]+v[i-1]*v[k]*v[j];
                dp[i][j]=min(q,dp[i][j]);
            }
        }
    }
    return dp[1][t-1];
}
